// Generated by CIRCT firtool-1.75.0

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for register randomization.

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module RegisterFile(	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:31:7]
  input         clock,	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:31:7]
  input  [4:0]  io_rs1_addr,	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:33:15]
  output [31:0] io_rs1_data,	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:33:15]
  input  [4:0]  io_rs2_addr,	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:33:15]
  output [31:0] io_rs2_data,	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:33:15]
  input  [4:0]  io_waddr,	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:33:15]
  input  [31:0] io_wdata,	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:33:15]
  input         io_wen	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:33:15]
);

  wire [31:0] _regfile_ext_R0_data;	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:35:21]
  wire [31:0] _regfile_ext_R1_data;	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:35:21]
  regfile_32x32 regfile_ext (	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:35:21]
    .R0_addr (io_rs2_addr),
    .R0_en   (1'h1),	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:31:7]
    .R0_clk  (clock),
    .R0_data (_regfile_ext_R0_data),
    .R1_addr (io_rs1_addr),
    .R1_en   (1'h1),	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:31:7]
    .R1_clk  (clock),
    .R1_data (_regfile_ext_R1_data),
    .W0_addr (io_waddr),
    .W0_en   (io_wen & (|io_waddr)),	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:37:{17,30}]
    .W0_clk  (clock),
    .W0_data (io_wdata)
  );	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:35:21]
  assign io_rs1_data = (|io_rs1_addr) ? _regfile_ext_R1_data : 32'h0;	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:31:7, :35:21, :47:{22,36}]
  assign io_rs2_data = (|io_rs2_addr) ? _regfile_ext_R0_data : 32'h0;	// @[generators/riscv-sodor/src/main/scala/sodor/rv32_5stage/regfile.scala:31:7, :35:21, :48:{22,36}]
endmodule

