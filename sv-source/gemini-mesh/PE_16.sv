// Generated by CIRCT firtool-1.75.0

// Include register initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for register randomization.

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module PE_16(	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
  input         clock,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
  input  [7:0]  io_in_a,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  input  [19:0] io_in_b,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  input  [19:0] io_in_d,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  output [7:0]  io_out_a,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  output [19:0] io_out_b,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  output [19:0] io_out_c,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  input         io_in_control_dataflow,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  input         io_in_control_propagate,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  input  [4:0]  io_in_control_shift,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  output        io_out_control_dataflow,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  output        io_out_control_propagate,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  output [4:0]  io_out_control_shift,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  input  [2:0]  io_in_id,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  output [2:0]  io_out_id,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  input         io_in_last,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  output        io_out_last,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  input         io_in_valid,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  output        io_out_valid,	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
  output        io_bad_dataflow	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
);

  wire [19:0] _mac_unit_io_out_d;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:64:24]
  reg  [31:0] c1;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:70:15]
  reg  [31:0] c2;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:71:15]
  reg         last_s;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:89:25]
  wire [4:0]  shift_offset = last_s == io_in_control_propagate ? 5'h0 : io_in_control_shift;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:89:25, :90:21, :91:25]
  wire [31:0] _GEN = {27'h0, shift_offset - 5'h1};	// @[generators/gemmini/src/main/scala/gemmini/Arithmetic.scala:101:{50,53}, generators/gemmini/src/main/scala/gemmini/PE.scala:90:21, :91:25]
  wire [31:0] _io_out_c_point_five_T_3 = $signed($signed(c1) >>> _GEN);	// @[generators/gemmini/src/main/scala/gemmini/Arithmetic.scala:101:50, generators/gemmini/src/main/scala/gemmini/PE.scala:70:15]
  wire [31:0] _GEN_0 = {27'h0, shift_offset};	// @[generators/gemmini/src/main/scala/gemmini/Arithmetic.scala:101:50, :103:30, generators/gemmini/src/main/scala/gemmini/PE.scala:90:21, :91:25]
  wire [31:0] _io_out_c_T = $signed($signed(c1) >>> _GEN_0);	// @[generators/gemmini/src/main/scala/gemmini/Arithmetic.scala:103:30, generators/gemmini/src/main/scala/gemmini/PE.scala:70:15]
  wire [31:0] _io_out_c_T_2 = _io_out_c_T + {31'h0, (|shift_offset) & _io_out_c_point_five_T_3[0] & ((|(shift_offset < 5'h2 ? 32'h0 : c1 & (32'h1 << _GEN) - 32'h1)) | _io_out_c_T[0])};	// @[generators/gemmini/src/main/scala/gemmini/Arithmetic.scala:101:{29,32,50}, :102:{24,27,52,60,81,89}, :103:30, :105:{29,38}, :107:28, generators/gemmini/src/main/scala/gemmini/PE.scala:70:15, :90:21, :91:25]
  wire [31:0] _GEN_1 = {27'h0, shift_offset - 5'h1};	// @[generators/gemmini/src/main/scala/gemmini/Arithmetic.scala:101:{50,53}, generators/gemmini/src/main/scala/gemmini/PE.scala:90:21, :91:25]
  wire [31:0] _io_out_c_point_five_T_8 = $signed($signed(c2) >>> _GEN_1);	// @[generators/gemmini/src/main/scala/gemmini/Arithmetic.scala:101:50, generators/gemmini/src/main/scala/gemmini/PE.scala:71:15]
  wire [31:0] _io_out_c_T_11 = $signed($signed(c2) >>> _GEN_0);	// @[generators/gemmini/src/main/scala/gemmini/Arithmetic.scala:103:30, generators/gemmini/src/main/scala/gemmini/PE.scala:71:15]
  wire [31:0] _io_out_c_T_13 = _io_out_c_T_11 + {31'h0, (|shift_offset) & _io_out_c_point_five_T_8[0] & ((|(shift_offset < 5'h2 ? 32'h0 : c2 & (32'h1 << _GEN_1) - 32'h1)) | _io_out_c_T_11[0])};	// @[generators/gemmini/src/main/scala/gemmini/Arithmetic.scala:101:{29,32,50}, :102:{24,27,52,60,81,89}, :103:30, :105:{29,38}, :107:28, generators/gemmini/src/main/scala/gemmini/PE.scala:71:15, :90:21, :91:25]
  wire [31:0] _GEN_2 = {{12{io_in_d[19]}}, io_in_d};	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:124:10]
  wire [31:0] _GEN_3 = {{12{_mac_unit_io_out_d[19]}}, _mac_unit_io_out_d};	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:64:24, :108:10]
  always @(posedge clock) begin	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
    if (io_in_valid) begin	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
      if (io_in_control_dataflow) begin	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
        if (io_in_control_dataflow & io_in_control_propagate)	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:70:15, :118:101, :119:30, :124:10]
          c1 <= _GEN_2;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:70:15, :124:10]
        if (~io_in_control_dataflow | io_in_control_propagate) begin	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:71:15, :118:101, :119:30]
        end
        else	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:71:15, :118:101, :119:30]
          c2 <= _GEN_2;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:71:15, :124:10]
      end
      else begin	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:35:14]
        c1 <= io_in_control_propagate ? {{12{io_in_d[19]}}, io_in_d} : _GEN_3;	// @[generators/gemmini/src/main/scala/gemmini/Arithmetic.scala:117:26, :118:{14,18}, generators/gemmini/src/main/scala/gemmini/PE.scala:70:15, :103:30, :108:10, :109:10, :115:10]
        c2 <= io_in_control_propagate ? _GEN_3 : {{12{io_in_d[19]}}, io_in_d};	// @[generators/gemmini/src/main/scala/gemmini/Arithmetic.scala:117:26, :118:{14,18}, generators/gemmini/src/main/scala/gemmini/PE.scala:71:15, :103:30, :108:10, :116:10]
      end
      last_s <= io_in_control_propagate;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:89:25]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
      `FIRRTL_BEFORE_INITIAL	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:2];	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
    initial begin	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
      `ifdef INIT_RANDOM_PROLOG_	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
        `INIT_RANDOM_PROLOG_	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
        end	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
        c1 = _RANDOM[2'h0];	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7, :70:15]
        c2 = _RANDOM[2'h1];	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7, :71:15]
        last_s = _RANDOM[2'h2][0];	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7, :89:25]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
      `FIRRTL_AFTER_INITIAL	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  MacUnit mac_unit (	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:64:24]
    .io_in_a  (io_in_a),
    .io_in_b  (io_in_control_dataflow ? (io_in_control_propagate ? c2[7:0] : c1[7:0]) : io_in_b[7:0]),	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:70:15, :71:15, :102:95, :103:30, :106:37, :118:101, :119:30, :121:{24,38}, :127:{24,38}]
    .io_in_c  (io_in_control_dataflow ? {{12{io_in_b[19]}}, io_in_b} : io_in_control_propagate ? c2 : c1),	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:70:15, :71:15, :102:95, :103:30, :107:24, :114:24, :118:101, :122:24]
    .io_out_d (_mac_unit_io_out_d)
  );	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:64:24]
  assign io_out_a = io_in_a;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
  assign io_out_b = io_in_control_dataflow ? _mac_unit_io_out_d : io_in_b;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7, :64:24, :102:95, :103:30, :118:101]
  assign io_out_c = io_in_control_dataflow ? (io_in_control_propagate ? c1[19:0] : c2[19:0]) : io_in_control_propagate ? ($signed(_io_out_c_T_2) > 32'sh7FFFF ? 20'h7FFFF : $signed(_io_out_c_T_2) < -32'sh80000 ? 20'h80000 : _io_out_c_T_2[19:0]) : $signed(_io_out_c_T_13) > 32'sh7FFFF ? 20'h7FFFF : $signed(_io_out_c_T_13) < -32'sh80000 ? 20'h80000 : _io_out_c_T_13[19:0];	// @[generators/gemmini/src/main/scala/gemmini/Arithmetic.scala:107:28, :125:{33,60}, generators/gemmini/src/main/scala/gemmini/PE.scala:31:7, :70:15, :71:15, :102:95, :103:30, :104:16, :111:16, :118:101, :119:30, :120:16, :126:16, src/main/scala/chisel3/util/Mux.scala:126:16]
  assign io_out_control_dataflow = io_in_control_dataflow;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
  assign io_out_control_propagate = io_in_control_propagate;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
  assign io_out_control_shift = io_in_control_shift;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
  assign io_out_id = io_in_id;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
  assign io_out_last = io_in_last;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
  assign io_out_valid = io_in_valid;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
  assign io_bad_dataflow = 1'h0;	// @[generators/gemmini/src/main/scala/gemmini/PE.scala:31:7]
endmodule

